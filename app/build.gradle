/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.4/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
//    id 'org.springframework.boot' version '2.6.2'
//    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'application'
    id 'java'
}

repositories {
    // Use Maven Central for resolving dependencies.
    //mavenCentral()
    jcenter()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:32.1.1-jre'
    implementation 'org.springframework:spring-core:5.3.10'
    implementation 'org.springframework:spring-context:5.3.10'
    implementation 'org.springframework:spring-beans:5.3.10'
    //implementation 'org.springframework.boot:spring-boot-starter-web'
    //implementation 'io.micrometer:micrometer-registry-prometheus:latest.release'
    implementation 'io.prometheus:simpleclient:0.15.0'
    implementation 'io.prometheus:simpleclient_common:0.15.0'
    implementation 'io.prometheus:simpleclient_hotspot:0.15.0'
    implementation 'io.prometheus:simpleclient_servlet:0.15.0'
    implementation 'io.prometheus:simpleclient_httpserver:0.15.0'
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit Jupiter test framework
            useJUnitJupiter('5.9.3')
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }

}



application {
    // Define the main class for the application.
    // mainClass = 'Application'
    mainClass = 'prometheustest.App'
}
